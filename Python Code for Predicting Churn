import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Create a DataFrame
data = {'Age': [25, 35, 45, 22, 50, 60, 32, 55, 28, 48],
        'MonthlySpend': [200, 300, 500, 150, 700, 800, 250, 600, 180, 450],
        'CustomerType': ['Regular', 'Regular', 'Regular', 'Churn', 'Churn', 'Churn', 'Regular', 'Churn', 'Regular', 'Churn']}

df = pd.DataFrame(data)

# Split the data into features and target
X = df[['Age', 'MonthlySpend']]
y = df['CustomerType']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a RandomForestClassifier
clf = RandomForestClassifier(random_state=42)
clf.fit(X_train, y_train)

# Make predictions
y_pred = clf.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
classification_rep = classification_report(y_test, y_pred)

# Print the results
print("Dataset:\n", df)
print("Accuracy:", accuracy)
print("Classification Report:\n", classification_rep)

# Visualize the churn data
# Pairplot to visualize relationships between numerical features
sns.pairplot(df, hue='CustomerType', diag_kind='kde')
plt.show()

# Boxplot for Age and MonthlySpend
plt.figure(figsize=(10, 6))
sns.boxplot(x='CustomerType', y='Age', data=df)
plt.title('Boxplot for Age by Customer Type')
plt.show()

plt.figure(figsize=(10, 6))
sns.boxplot(x='CustomerType', y='MonthlySpend', data=df)
plt.title('Boxplot for Monthly Spend by Customer Type')
plt.show()
